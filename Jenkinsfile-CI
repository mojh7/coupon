pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                sh 'chmod +x gradlew'
                sh './gradlew clean build --exclude-task test --exclude-task asciidoctor'
                echo 'build success'
            }
        }

        stage('Test') {
            steps {
                sh './gradlew test'
                echo 'test success'
            }
        }

        state('SonarQube Analysis') {
            withSonarQubeEnv('SonarQubeServer') {
                sh "./gradlew sonarqube \
                -Dsonar.projectKey=${env.SONAR_PROJECT_KEY} \
                -Dsonar.host.url=${env.SONAR_HOST_URL} \
                -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
                echo 'SonarQube analysis'
            }
            echo 'SonarQube analysis success'
        }

        stage('Quality Gate') {
            echo '1'
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    echo '3'
                    waitForQualityGate abortPipeline: true
                    echo '4'
                }
            }
            echo '2'
        }
    }

    post {
        success {
            echo 'success'
        }
        failure {
            echo 'failure'
        }
    }
}